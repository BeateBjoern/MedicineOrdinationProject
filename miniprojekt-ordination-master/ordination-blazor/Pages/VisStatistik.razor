@page "/Statistik"

@using ordinationsapp.Data;
@using shared.Model;
@using ordinationsapp.Shared
@using ordinationsapp.Model;
@inject ApiService apiService

<head>
    <link rel="stylesheet" href="/css/app.css">
</head>

<div class="container">
    <h1>Vis statistik</h1>

    <br />

    <div class="row">
        <div class="col-md-12 border p-3">
            <h3>Antal ordinationer</h3>

            <div class="form-group row">
                <label for="vægtfra" class="col-sm-4 col-form-label">Vægt fra</label>
                <div class="col-sm-8">
                <input @bind="vægtFra"type="number" class="form-control" id="vægtfra">
                </div>
            </div>

            <div class="form-group row">
                <label for="vægttil" class="col-sm-4 col-form-label">Vægt til</label>
                <div class="col-sm-8">
                <input @bind="vægtTil" type="number" class="form-control" id="vægttil">
                </div>
            </div>

    
            <div class="form-group row">
                <label for="lm" class="col-sm-4 col-form-label">Lægemiddel</label>
                <div class="col-sm-8">
                    @if(lmList != null)
                    {
                        <select class="form-control" id="lm" @bind="valgtLægemiddelNavn">
                            @foreach (var option in lmList)
                            {
                                <option value="@option.navn">@option.navn</option>
                            }
                        </select>
                    }
                    <button class="btn btn-primary" @onclick="HentAntal"> Tjek resultat </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-12 border p-3">
            <h3>Resultat</h3>

            <div class="form-group row">
                <label for="antal" class="col-sm-4 col-form-label">Antal</label>
                <div class="col-sm-8">
                <input readonly type="number" class="form-control" id="antal" value="@antal">
                
                </div>
            </div>

        </div>
    </div>

</div>

@code {
    public Ordination? ordination;
    public List<Ordination> ordinationer = new List<Ordination>();
    public List<Laegemiddel> lmList = new List<Laegemiddel>();
    public List<Patient> patientListe = new List<Patient>();
    public Laegemiddel valgtLægemiddel { get; set; }
    public string valgtLægemiddelNavn = "";
    public int antal = 0;
    public int vægtFra = 0; 
    public int vægtTil = 0; 

    public PatientResponse[] PatientResponses { get; set; }

    protected override async Task  OnInitializedAsync()
    {

        var result = await apiService.GetOrdinationer(); //henter alle ordinationer 
        var resultLm = await apiService.GetLaegemidler(); //henter lægemidler for at anvende i dropdown menu
        //var resultP = await apiService.GetPatienter();
        PatientResponses = await apiService.GetPatienter();


        if(result != null && resultLm != null && PatientResponses != null)
        {
            for(int i = 0; i < result.pn.Length; i++)
            {
                ordinationer.Add(result.pn[i]);
                Console.WriteLine(result.pn[i]);
            }

            for (int i = 0; i < result.dagligSkaev.Length; i++)
            {
                ordinationer.Add(result.dagligSkaev[i]);
            }
            for (int i = 0; i < result.dagligFast.Length; i++)
            {
                ordinationer.Add(result.dagligFast[i]);
            }


           // patientListe = resultP
           //.Select(pr => new Patient(pr.id, pr.cprnr, pr.navn, pr.vaegt))
           //.ToList();
        }

        if(resultLm!= null)
        {
            lmList = resultLm.ToList();
            Console.WriteLine("Antal i lmList: " + resultLm.Count());

        }

    }


    public void HentAntal()
    {
        if (vægtFra != null && vægtTil != null && !string.IsNullOrEmpty(valgtLægemiddelNavn))
        {
            Console.WriteLine("HentAntal() metode: ");


            List<Ordination> ordinationerFundet = ordinationer
                .Where(o => o.laegemiddel.navn == valgtLægemiddelNavn)
                .ToList();

            Console.WriteLine("ordinationerFundet length: " + ordinationerFundet.Count());

            List<PatientResponse> patienter = PatientResponses
                .Where(p => p.vaegt >= vægtFra && p.vaegt <= vægtTil)
                .ToList();

            Console.WriteLine("Vægt: " + vægtFra + " " + vægtTil);
            Console.WriteLine("patientliste length: " + patienter.Count());

            antal = ordinationerFundet
                .Count(o => patienter.Any(p => p.id == o.patientId));

            Console.WriteLine("Antal ordinationer: " + antal);
        }
    }


            
    

  

}